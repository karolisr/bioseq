use crate::get_trans_table;
use std::collections::HashMap;

pub fn translate(nt: impl Into<String>, gc_id: usize) -> String {
    let tt: HashMap<String, String> = get_trans_table(gc_id);
    let nt: String = nt.into().to_ascii_uppercase();

    let mut i: usize = 0;
    let mut aa: String = String::new();
    while i < nt.len() {
        let triplet = match nt.get(i..i + 3) {
            Some(x) => x,
            None => break,
        };
        let residue = match tt.get(triplet) {
            Some(x) => x,
            None => break,
        };
        aa += residue;
        i += 3;
    }
    return aa;
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn t_translate() {
        assert_eq!(
            translate("ATGAGCAAAAGCAAAGTTGACAACCAGTTCTACAGTGTGGAAGTGGGAGACTCAACCTTCACAGTTCTCAAGCGCTACCAGAATCTAAAGCCTATTGGCTCTGGGGCTCAGGGCATAGTTTGTGCCGCGTATGATGCTGTCCTTGACAGAAATGTGGCCATTAAGAAGCTCAGCAGACCCTTTCAGAACCAAACACATGCCAAGAGAGCGTACCGGGAGCTGGTCCTCATGAAGTGTGTGAACCATAAAAACATTATTAGTTTATTAAATGTCTTCACACCCCAGAAAACGCTGGAGGAGTTCCAAGATGTTTACTTAGTAATGGAACTGATGGATGCCAACTTATGTCAAGTGATTCAGATGGAATTAGACCATGAGCGAATGTCTTACCTGCTGTACCAAATGTTGTGTGGCATTAAGCACCTCCATTCTGCTGGAATTATTCACAGGGATTTAAAACCAAGTAACATTGTAGTCAAGTCTGATTGCACATTGAAAATCCTGGACTTTGGACTGGCCAGGACAGCAGGCACAAGCTTCATGATGACTCCATATGTGGTGACACGTTATTACAGAGCCCCTGAGGTCATCCTGGGGATGGGCTACAAGGAGAACGTGGATATATGGTCTGTGGGATGCATTATGGGAGAAATGGTTCGCCACAAAATCCTCTTTCCAGGAAGGGACTATATTGACCAGTGGAATAAGGTAATTGAACAACTAGGAACACCATGTCCAGAATTCATGAAGAAATTGCAACCCACAGTAAGAAACTATGTGGAGAATCGGCCCAAGTATGCGGGACTCACCTTCCCCAAACTCTTCCCAGATTCCCTCTTCCCAGCGGACTCCGAGCACAATAAACTCAAAGCCAGCCAAGCCAGGGACTTGTTGTCAAAGATGCTAGTGATTGACCCAGCAAAAAGAATATCAGTGGACGACGCCTTACAGCATCCCTACATCAACGTCTGGTATGACCCAGCCGAAGTGGAGGCGCCTCCACCTCAGATATATGACAAGCAGTTGGATGAAAGAGAACACACAATTGAAGAATGGAAAGAACTTATCTACAAGGAAGTAATGAATTCAGAAGAAAAGACTAAAAATGGTGTAGTAAAAGGACAGCCTTCTCCTTCAGGTGCAGCAGTGAACAGCAGTGAGAGTCTCCCTCCATCCTCGTCTGTCAATGACATCTCCTCCATGTCCACCGACCAGACCCTGGCATCTGACACTGACAGCAGCCTGGAAGCCTCGGCAGGACCCCTGGGTTGTTGCAGGTGA", 1),
            "MSKSKVDNQFYSVEVGDSTFTVLKRYQNLKPIGSGAQGIVCAAYDAVLDRNVAIKKLSRPFQNQTHAKRAYRELVLMKCVNHKNIISLLNVFTPQKTLEEFQDVYLVMELMDANLCQVIQMELDHERMSYLLYQMLCGIKHLHSAGIIHRDLKPSNIVVKSDCTLKILDFGLARTAGTSFMMTPYVVTRYYRAPEVILGMGYKENVDIWSVGCIMGEMVRHKILFPGRDYIDQWNKVIEQLGTPCPEFMKKLQPTVRNYVENRPKYAGLTFPKLFPDSLFPADSEHNKLKASQARDLLSKMLVIDPAKRISVDDALQHPYINVWYDPAEVEAPPPQIYDKQLDEREHTIEEWKELIYKEVMNSEEKTKNGVVKGQPSPSGAAVNSSESLPPSSSVNDISSMSTDQTLASDTDSSLEASAGPLGCCR*"
        );
    }

    // #[test]
    // fn t_yyy() {}
}
